#!/bin/bash

# GoormIDE V2Ray Auto Deploy Script - Updated 2025
# –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ—Ä—Å–∏–π V2Ray

set -e

USER=$(whoami)
SCRIPT_DIR="$HOME/.goormide"
V2RAY_DIR="$SCRIPT_DIR/bin/v2ray"
CONFIG_FILE="$V2RAY_DIR/config.json"
SERVICE_FILE="$SCRIPT_DIR/service.sh"

# –¶–≤–µ—Ç–Ω–æ–π –≤—ã–≤–æ–¥
red() {
    echo -e "\033[31m$1\033[0m"
}

green() {
    echo -e "\033[32m$1\033[0m"
}

blue() {
    echo -e "\033[34m$1\033[0m"
}

yellow() {
    echo -e "\033[33m$1\033[0m"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
get_arch() {
    local arch=$(uname -m)
    case $arch in
        x86_64) echo "64" ;;
        aarch64) echo "arm64-v8a" ;;
        *) echo "64" ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ UUID
generate_uuid() {
    if command -v uuidgen >/dev/null 2>&1; then
        uuidgen | tr '[:upper:]' '[:lower:]'
    else
        cat /proc/sys/kernel/random/uuid
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞ V2Ray
create_v2ray_config() {
    local uuid=$(generate_uuid)
    local port=$((RANDOM % 10000 + 20000))
    
    cat > "$CONFIG_FILE" << EOF
{
  "log": {
    "loglevel": "warning"
  },
  "inbounds": [
    {
      "port": $port,
      "protocol": "socks",
      "settings": {
        "auth": "noauth"
      }
    },
    {
      "port": $((port + 1)),
      "protocol": "http",
      "settings": {}
    }
  ],
  "outbounds": [
    {
      "protocol": "freedom",
      "settings": {}
    }
  ]
}
EOF
    
    echo "$port"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
create_service_script() {
    local port=$1
    
    cat > "$SERVICE_FILE" << EOF
#!/bin/bash

SCRIPT_DIR="\$HOME/.goormide"
V2RAY_BIN="\$SCRIPT_DIR/bin/v2ray/v2ray"
CONFIG_FILE="\$SCRIPT_DIR/bin/v2ray/config.json"
PID_FILE="\$SCRIPT_DIR/v2ray.pid"

start_v2ray() {
    if [[ -f "\$PID_FILE" ]]; then
        local pid=\$(cat "\$PID_FILE")
        if kill -0 "\$pid" 2>/dev/null; then
            echo "V2Ray —É–∂–µ –∑–∞–ø—É—â–µ–Ω (PID: \$pid)"
            return 0
        fi
    fi
    
    echo "–ó–∞–ø—É—Å–∫ V2Ray..."
    nohup "\$V2RAY_BIN" run -c "\$CONFIG_FILE" >/dev/null 2>&1 &
    local pid=\$!
    echo "\$pid" > "\$PID_FILE"
    
    sleep 2
    if kill -0 "\$pid" 2>/dev/null; then
        echo "V2Ray —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω (PID: \$pid)"
        echo "SOCKS5 –ø—Ä–æ–∫—Å–∏: localhost:$port"
        echo "HTTP –ø—Ä–æ–∫—Å–∏: localhost:$((port + 1))"
        return 0
    else
        echo "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ V2Ray"
        return 1
    fi
}

stop_v2ray() {
    if [[ -f "\$PID_FILE" ]]; then
        local pid=\$(cat "\$PID_FILE")
        if kill -0 "\$pid" 2>/dev/null; then
            kill "\$pid"
            rm -f "\$PID_FILE"
            echo "V2Ray –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        else
            rm -f "\$PID_FILE"
            echo "V2Ray –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        fi
    else
        echo "V2Ray –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
}

case "\$1" in
    start)
        start_v2ray
        ;;
    stop)
        stop_v2ray
        ;;
    restart)
        stop_v2ray
        sleep 1
        start_v2ray
        ;;
    status)
        if [[ -f "\$PID_FILE" ]]; then
            local pid=\$(cat "\$PID_FILE")
            if kill -0 "\$pid" 2>/dev/null; then
                echo "V2Ray –∑–∞–ø—É—â–µ–Ω (PID: \$pid)"
                echo "SOCKS5 –ø—Ä–æ–∫—Å–∏: localhost:$port"
                echo "HTTP –ø—Ä–æ–∫—Å–∏: localhost:$((port + 1))"
            else
                echo "V2Ray –Ω–µ –∑–∞–ø—É—â–µ–Ω"
                rm -f "\$PID_FILE"
            fi
        else
            echo "V2Ray –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        fi
        ;;
    *)
        start_v2ray
        ;;
esac
EOF
    
    chmod +x "$SERVICE_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ V2Ray
download_v2ray() {
    local arch=$(get_arch)
    local version="v5.16.1"  # –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç–∞–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è
    local url="https://github.com/v2fly/v2ray-core/releases/download/${version}/v2ray-linux-${arch}.zip"
    
    blue "–ó–∞–≥—Ä—É–∑–∫–∞ V2Ray ${version} –¥–ª—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã ${arch}..."
    
    cd "$V2RAY_DIR"
    
    if command -v wget >/dev/null 2>&1; then
        wget -q -O v2ray.zip "$url"
    elif command -v curl >/dev/null 2>&1; then
        curl -L -s -o v2ray.zip "$url"
    else
        red "–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω wget –∏–ª–∏ curl"
        exit 1
    fi
    
    if command -v unzip >/dev/null 2>&1; then
        unzip -q v2ray.zip
        rm v2ray.zip
    else
        red "–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω unzip"
        exit 1
    fi
    
    chmod +x v2ray
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
install() {
    blue "### GoormIDE V2Ray Auto Deploy Script 2025 ###"
    green "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ—Ä—Å–∏–π V2Ray"
    echo
    
    yellow "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:"
    echo "1. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø–æ—Å–ª–µ –ª–æ–≥–∏–Ω–∞ –≤ GoormIDE"
    echo "2. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ—Ä—Å–∏–π V2Ray"
    echo "3. SOCKS5 –∏ HTTP –ø—Ä–æ–∫—Å–∏"
    echo "4. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Ä—Ç–æ–≤"
    echo
    
    green "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É? [Y/n]: "
    read -r confirm
    
    if [[ "$confirm" != "n" && "$confirm" != "N" ]]; then
        blue "–ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É..."
    else
        red "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
        exit 0
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É
    if [[ -d "$SCRIPT_DIR" ]]; then
        yellow "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞. –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å? [Y/n]: "
        read -r confirm
        
        if [[ "$confirm" != "n" && "$confirm" != "N" ]]; then
            blue "–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
            pkill -f "v2ray" 2>/dev/null || true
            rm -rf "$SCRIPT_DIR"
            # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ bashrc –µ—Å–ª–∏ –µ—Å—Ç—å –±—ç–∫–∞–ø
            if [[ -f "$HOME/.bashrc_bak" ]]; then
                mv "$HOME/.bashrc_bak" "$HOME/.bashrc"
            fi
        else
            green "–í—ã—Ö–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
            exit 0
        fi
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    blue "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    mkdir -p "$V2RAY_DIR"
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ V2Ray
    download_v2ray
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    blue "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    local port=$(create_v2ray_config)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
    blue "–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞..."
    create_service_script "$port"
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
    blue "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞..."
    if [[ -f "$HOME/.bashrc" ]]; then
        cp "$HOME/.bashrc" "$HOME/.bashrc_bak"
    fi
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –≤ bashrc
    echo "" >> "$HOME/.bashrc"
    echo "# GoormIDE V2Ray Auto Start" >> "$HOME/.bashrc"
    echo "if [[ -f \"$SERVICE_FILE\" ]]; then" >> "$HOME/.bashrc"
    echo "    \"$SERVICE_FILE\" start >/dev/null 2>&1" >> "$HOME/.bashrc"
    echo "fi" >> "$HOME/.bashrc"
    
    # –ó–∞–ø—É—Å–∫ V2Ray
    blue "–ó–∞–ø—É—Å–∫ V2Ray..."
    "$SERVICE_FILE" start
    
    sleep 2
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    if pgrep -f "v2ray" >/dev/null; then
        green "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
        echo
        green "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–∫—Å–∏:"
        echo "üîπ SOCKS5: localhost:$port"
        echo "üîπ HTTP: localhost:$((port + 1))"
        echo
        yellow "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ V2Ray:"
        echo "–ó–∞–ø—É—Å–∫: $SERVICE_FILE start"
        echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞: $SERVICE_FILE stop"
        echo "–°—Ç–∞—Ç—É—Å: $SERVICE_FILE status"
        echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: $SERVICE_FILE restart"
        echo
        blue "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∫—Å–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:"
        echo "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SwitchyOmega –≤ Chrome/Firefox"
        echo "2. –î–æ–±–∞–≤—å—Ç–µ SOCKS5 –ø—Ä–æ–∫—Å–∏: localhost:$port"
        echo "3. –ò–ª–∏ HTTP –ø—Ä–æ–∫—Å–∏: localhost:$((port + 1))"
    else
        red "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏. V2Ray –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è."
        red "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é:"
        red "$SERVICE_FILE start"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [[ -z "$GOORM_PROJECT_NAME" && -z "$GOORM_TASK_ID" ]]; then
    yellow "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –°–∫—Ä–∏–ø—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è GoormIDE"
    yellow "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –Ω–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    echo
fi

# –ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
install
